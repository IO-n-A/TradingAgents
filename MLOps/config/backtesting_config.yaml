# MLOps/config/backtesting_config.yaml
backtest_run_name: "PPO_StockTrading_Sentiment_Backtest_Default"

# Path to the trained RL agent model to be loaded for backtesting
# This path should be relative to the project root or an absolute path.
# Example: "models/rl_agents/FINRL_PPO_TRAINED_YYYYMMDD_HHMMSS.zip"
# This will often be an output from the RL training pipeline.
# For placeholder, it might point to a pre-existing model if available for testing the script.
trained_model_path: "models/rl_agents/FINRL_PPO_trained_20250610_204210.zip" # Placeholder, update with actual model path

# DRL library used for the trained model (e.g., "stable_baselines3", "elegantrl")
drl_lib: "stable_baselines3"
model_name: "ppo" # Name of the algorithm (e.g., ppo, sac, td3) - used by FinRL's DRLAgent

# Environment configuration to use for backtesting
# This should match the environment used for training the model.
# Points to a YAML file in MLOps/config/environments/
environment_config_file: "MLOps/config/environments/stock_trading_env_config.yaml"

# Data source for FinRL's internal DataProcessor if used by test function (less relevant if we load preprocessed data)
data_source_for_finrl_test_function: "yahoofinance"

# Technical indicators list (must match those used during training and present in processed data)
# This is often part of the environment_config_file, but can be listed here for clarity/override.
# If not specified, it will be taken from the loaded environment_config.
# technical_indicator_list: ["macd", "rsi_30", "cci_30", "dx_30", "daily_sentiment_positive_mean", "daily_sentiment_negative_mean", "daily_sentiment_neutral_mean", "daily_news_count"]

# Whether VIX data was used/expected by the model and environment (should be consistent with training)
if_vix: true # This flag is used by FinRL's DataProcessor if it were to re-process data.

# Output directory for backtesting results (plots, stats)
# Relative to MLOps/results/ defined in global_vars.yaml
results_subdir: "backtesting_runs" # e.g., MLOps/results/backtesting_runs/PPO_StockTrading_Sentiment_Backtest_Default_YYYYMMDD_HHMMSS/

# Plotting and stats generation
generate_pyfolio_plots: true # Pyfolio plots are generated by finrl.plot.backtest_plot
baseline_ticker_for_pyfolio: "^DJI" # Dow Jones Index as an example baseline for pyfolio

# Deterministic predictions during backtesting
deterministic_prediction: true

# DVC tracking for backtest results
dvc_tracking:
  enabled: true